[package]
name = "hello-rust-backend"
version = "0.2.0"
edition = "2021"
license = "GPL-3.0-or-later"
default-run = "hello-rust-backend"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
reqwest = { version = "0.11", features = ["json", "native-tls-vendored"] }
tokio = { version = "1", features = ["rt-multi-thread", "time", "signal"] }
tokio-stream = "0.1.11"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.89"
serde_dynamo = { version = "4.0.9", features = ["aws-sdk-dynamodb+0_21"] }
config = { version = "0.13.3", features = [] }
yup-oauth2 = "8.1.0"
aws-config = "0.51.0"
aws-sdk-dynamodb = "0.21.0"
# https://github.com/1Password/typeshare
# sharing types with frontend
typeshare = "1.0.1"

# error types
thiserror = "1.0.37"
anyhow = "1.0.69"

# tokio tracing crate
tracing = "0.1.37"
# Implements the types defined in the Otel spec
# "rt-tokio-current-thread" required for batch exports of spans
opentelemetry = { version = "0.18.0", features = ["rt-tokio-current-thread"] }
opentelemetry-semantic-conventions = "0.10.0"
# Integration between the tracing crate and the opentelemetry crate
tracing-opentelemetry = "0.18.0"
# Allows you to export data to OTEL collector
# Requires protoc to be installed (protobuf compiler)
opentelemetry-otlp = "0.11.0"
tracing-subscriber = { version = "0.3.16", features = ["json"] }
tracing-serde = "0.1.3"

# GRPC (used for connecting to etcd)
tonic = "0.8.3"
prost = "0.11.8"

[build-dependencies]
# compile .proto files into an api
tonic-build = "0.8.4"

# Cross (cross-compilation) Config
[package.metadata.cross.target.aarch64-unknown-linux-gnu]
# install protoc protobuf compiler in cross docker image
dockerfile = "./CrossDockerfile"
